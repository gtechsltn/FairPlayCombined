@page "/Creator/UploadMyVideo"

@attribute [Authorize(Roles = FairPlayCombined.Common.Constants.RoleName.BasicPlanUser)]

@using FairPlayCombined.Common
@using FairPlayCombined.Common.FairPlayTube.Enums
@using FairPlayCombined.Interfaces
@using FairPlayCombined.Interfaces.Common
@using FairPlayCombined.Interfaces.FairPlayTube
@using FairPlayCombined.Models.AzureVideoIndexer
@using FairPlayCombined.Models.FairPlayTube.VideoInfo
@using FairPlayTube.SharedUI.Components.Spinners
@using FairPlayTube.SharedUI.Components.YouTube
@using Google.Apis.YouTube.v3.Data

<FluentLabel Typo="Typography.H3">
    @Localizer![UploadMyVideoTextKey]
</FluentLabel>
<LoadingIndicator ShowSpinners="this.IsBusy"></LoadingIndicator>

<FluentEditForm FormName="frmCreateVideoInfo" Model="this.CreateVideoInfoModel"
                OnValidSubmit="OnValidSubmitAsync" @ref="frmCreateVideoInfo">
    <div>
        <DataAnnotationsValidator></DataAnnotationsValidator>
    </div>
    <FluentWizard DisplayStepNumber="WizardStepStatus.All" StepperPosition="StepperPosition.Top"
                  OnFinish="PerformSubmitAsync">
        <Steps>
            <FluentWizardStep OnChange="OnVideoNameChange">
                <div>
                    <FluentLabel Typo="Typography.Body">@Localizer![NameTextKey]</FluentLabel>
                    <FluentTextField @bind-Value="this.CreateVideoInfoModel.Name" style="width:100%;"></FluentTextField>
                    <FluentValidationMessage For="@(()=>this.CreateVideoInfoModel.Name)"></FluentValidationMessage>
                    <FluentCheckbox @bind-Value="this.CreateVideoInfoModel.IsVideoGeneratedWithAi" Label="@Localizer![WasVideoGeneratedUsingAITextKey]"></FluentCheckbox>
                </div>
            </FluentWizardStep>
            <FluentWizardStep OnChange="OnVideoDescriptionStepChange">
                <div>
                    <FluentLabel Typo="Typography.Body">@Localizer![DescriptionTextKey]</FluentLabel>
                    <FluentTextArea @bind-Value="this.CreateVideoInfoModel.Description" style="width:100%;"></FluentTextArea>
                    <FluentValidationMessage For="@(()=>this.CreateVideoInfoModel.Description)"></FluentValidationMessage>
                </div>
            </FluentWizardStep>
            <FluentWizardStep Label="@Localizer![VideoUrlTextKey]" OnChange="OnVideoUrlChange">
                <div>
                    <FluentLabel Typo="Typography.Body">@Localizer![VideoUrlTextKey]</FluentLabel>
                    <FluentTextField @bind-Value="this.CreateVideoInfoModel.ExternalVideoSourceUrl" style="width:100%;"></FluentTextField>
                    <FluentValidationMessage For="@(()=>this.CreateVideoInfoModel.ExternalVideoSourceUrl)"></FluentValidationMessage>
                </div>
            </FluentWizardStep>
            <FluentWizardStep>
                <FluentLabel Typo="Typography.Body">@Localizer![YouCanUploadToYouTubeTextKey]</FluentLabel>
                <FluentButton Type="ButtonType.Button" OnClick="UploadToYouTubeAsync">@Localizer![UploadToYouTubeTextKey]</FluentButton>
                <FluentLabel Typo="Typography.Body">@Localizer![BytesSentTextKey]: @BytesSent</FluentLabel>
            </FluentWizardStep>
            <FluentWizardStep>
                <div>
                    <FluentLabel Typo="Typography.Subject">@Localizer![YouTubeVideoIdTextKey]</FluentLabel>
                    <InputText class="@ThemeConfiguration.GenericControls.DefaultCss"
                               @bind-Value="this.CreateVideoInfoModel.YouTubeVideoId" style="width:100%;"></InputText>
                    @if (this.IsAuthenticatedWithGoogle)
                    {
                        <FluentButton Type="ButtonType.Button" OnClick="this.OpenSearchYouTubeVideoDialog">@Localizer![SearchMyVideosTextKey]</FluentButton>
                    }
                </div>
            </FluentWizardStep>
        </Steps>
    </FluentWizard>
</FluentEditForm>

<FluentDialog @ref="SearchYoutubeVideosDialog"
              @bind-Hidden="@HideSearchYoutubeVideosDialog"
              Modal="true" TrapFocus="true"
              PreventScroll="false">
    <FluentDialogHeader Visible="false"></FluentDialogHeader>
    <SearchYouTubeVideo OnYouTubeVideoSelected="OnYouTubeVideoSelected"></SearchYouTubeVideo>
    <FluentButton Type="ButtonType.Button" Appearance="Microsoft.FluentUI.AspNetCore.Components.Appearance.Accent" OnClick="CloseSearchYouTubeVideoDialog">@Localizer![CloseTextKey]</FluentButton>
</FluentDialog>