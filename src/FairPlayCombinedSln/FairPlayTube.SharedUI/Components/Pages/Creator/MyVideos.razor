@attribute [Route(Constants.Routes.FairPlayTubeRoutes.CreatorRoutes.MyVideos)]
@implements IAsyncDisposable

@attribute [Authorize(Roles = FairPlayCombined.Common.Constants.RoleName.BasicPlanUser)]

@using FairPlayCombined.Common
@using FairPlayCombined.Common.CustomAttributes
@using FairPlayCombined.Common.GeneratorsAttributes
@using FairPlayCombined.Interfaces
@using FairPlayCombined.Interfaces.Common
@using FairPlayCombined.Interfaces.FairPlayTube
@using FairPlayCombined.Models.FairPlayTube.VideoInfo
@using FairPlayCombined.Models.Pagination
@using FairPlayTube.SharedUI.Components.Spinners
@using FairPlayTube.SharedUI.Components.Video
@using Microsoft.Extensions.Localization
@using System.Globalization

@attribute [StreamRendering(enabled: true)]

<PageTitle>@Localizer![MyVideosPageTitleTextKey]</PageTitle>

<LoadingIndicator ShowSpinners="this.IsBusy"></LoadingIndicator>

<FluentDataGrid ItemsProvider="ItemsProvider" Pagination="this.paginationState">
    <TemplateColumn>
        <FluentAccordion ExpandMode="AccordionExpandMode.Multi">
            <FluentAccordionItem Expanded="true">
                <HeadingTemplate>
                    <FluentLabel Typo="Typography.Subject">
                        @context.RowCreationDateTime
                    </FluentLabel>
                    <FluentLabel Typo="Typography.Subject">
                        @context.Name
                    </FluentLabel>
                </HeadingTemplate>
                <ChildContent>
                    <div>
                        <FluentLabel Typo="Typography.Body">@Localizer![IndexingCostTextKey]: @context.IndexingCost.ToString(CurrencyFormat, CurrencyCulture)</FluentLabel>
                    </div>
                    @if (context.YouTubeVideoId != null)
                    {
                        <div>
                            <FluentLabel Typo="Typography.Body">@Localizer![YouTubeVideoIdTextKey]: <a data-enhance-nav="false" href="@($"https://youtu.be/{context.YouTubeVideoId}")" target="_blank">@context.YouTubeVideoId</a></FluentLabel>
                        </div>
                    }
                    <div>
                        <VideoActions context="context" OnVideoDeleted="OnVideoDeletedAsync"></VideoActions>
                    </div>
                </ChildContent>
            </FluentAccordionItem>
        </FluentAccordion>
    </TemplateColumn>
</FluentDataGrid>
<FluentPaginator State="this.paginationState"></FluentPaginator>