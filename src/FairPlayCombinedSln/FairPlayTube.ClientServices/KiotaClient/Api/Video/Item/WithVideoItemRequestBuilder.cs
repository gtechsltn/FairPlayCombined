// <auto-generated/>
using FairPlayTube.ClientServices.KiotaClient.Api.Video.Item.Captions;
using FairPlayTube.ClientServices.KiotaClient.Api.Video.Item.Thumbnail;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace FairPlayTube.ClientServices.KiotaClient.Api.Video.Item {
    /// <summary>
    /// Builds and executes requests for operations under \api\video\{videoId}
    /// </summary>
    public class WithVideoItemRequestBuilder : BaseRequestBuilder {
        /// <summary>The captions property</summary>
        public CaptionsRequestBuilder Captions { get =>
            new CaptionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The thumbnail property</summary>
        public ThumbnailRequestBuilder Thumbnail { get =>
            new ThumbnailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new WithVideoItemRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithVideoItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/video/{videoId}", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new WithVideoItemRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithVideoItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/video/{videoId}", rawUrl) {
        }
    }
}
