@implements IDisposable

@inject NavigationManager NavigationManager

<FluentNavLink Href="/">Home</FluentNavLink>
<AuthorizeView>
    <Authorized>
        <FluentNavGroup Title="Accounts" Expanded="@ShouldExpandAccountsGroup">
            <FluentNavLink Href="/Account/Manage">Manage Account</FluentNavLink>
        </FluentNavGroup>
        <FluentNavGroup Title="Users" Expanded="@ShouldExpandUsersGroup">
            <FluentNavLink Href="/User/MyConversations">My Conversations</FluentNavLink>
            <FluentNavLink Href="/User/MyFunds">My Funds</FluentNavLink>
        </FluentNavGroup>
        <FluentNavGroup Title="Creators" Expanded="@ShouldExpandCreatorsGroup">
            <FluentNavLink Href="/Creator/UploadMyVideo">Upload My Video</FluentNavLink>
            <FluentNavLink Href="@Constants.Routes.FairPlayTubeRoutes.CreatorRoutes.MyVideos">My Videos</FluentNavLink>
            <FluentNavLink Href="@Constants.Routes.FairPlayTubeRoutes.CreatorRoutes.MyProcessingVideos">My Processing Videos</FluentNavLink>
            <FluentNavLink Href="/Creator/NewVideoRecommendation">Recommendations</FluentNavLink>
            <FluentNavLink Href="/Creator/NewVideoScript">New Video Script</FluentNavLink>
            <FluentNavLink Href="/Creator/CreateVideoPlan">Create Video Plan</FluentNavLink>
            <FluentNavLink Href="/Creator/MyVideoPlans">My Video Plans</FluentNavLink>
        </FluentNavGroup>
        <div class="nav-item px-3">
            <form action="Account/Logout" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <button type="submit" class="nav-link">
                    <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                </button>
            </form>
        </div>
    </Authorized>
    <NotAuthorized>
        <FluentNavLink Href="Account/Register">Register</FluentNavLink>
        <FluentNavLink Href="Account/Login">Login</FluentNavLink>
    </NotAuthorized>
</AuthorizeView>


@code {
    private string? currentUrl;
    private bool ShouldExpandAccountsGroup => this.NavigationManager.Uri.IndexOf("/Account") >= 0;
    private bool ShouldExpandUsersGroup => this.NavigationManager.Uri.IndexOf("/User") >= 0;
    private bool ShouldExpandCreatorsGroup => this.NavigationManager.Uri.IndexOf("/Creator") >= 0;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

