@page "/Account/RegisterConfirmation"

@using System.Text
@using FairPlayCombined.Common.CustomAttributes
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.Extensions.Localization

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

@inject IStringLocalizer<RegisterConfirmation> localizer

<PageTitle>@localizer[RegisterConfirmationTextKey]</PageTitle>

<h1>@localizer[RegisterConfirmationTextKey]</h1>

<StatusMessage Message="@statusMessage" />


<p>@localizer[CheckYourEmailTextKey]</p>

@code {
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = localizer[ErrorFindingUserTextKey];
        }
    }

    #region Resource Keys
    [ResourceKey(defaultValue: "Register confirmation")]
    public const string RegisterConfirmationTextKey = "RegisterConfirmationText";
    [ResourceKey(defaultValue: "Please check your email to confirm your account")]
    public const string CheckYourEmailTextKey = "CheckYourEmailText";
    [ResourceKey(defaultValue: "Error finding user for unspecified email")]
    public const string ErrorFindingUserTextKey = "ErrorFindingUserText";
    #endregion Resource Keys
}
