@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using FairPlayCombined.Common.CustomAttributes
@using Microsoft.AspNetCore.Identity
@using Microsoft.Extensions.Localization

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

@inject IStringLocalizer<Index> localizer

<PageTitle>
    @localizer[ProfileTitleTextKey]
</PageTitle>

<h3>
    @localizer[ProfileTitleTextKey]
</h3>
<StatusMessage />

<div class="row">
    <div class="col-md-6">
        <EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="form-floating @ThemeConfiguration.Divisions.DefaultCss">
                <input type="text" value="@username" class="@ThemeConfiguration.GenericControls.DefaultCss" placeholder="@localizer[ChooseUsernameTextKey]" disabled />
                <label for="username" class="@ThemeConfiguration.Labels.DefaultCss">@localizer[UsernameTextKey]</label>
            </div>
            <div class="form-floating @ThemeConfiguration.Divisions.DefaultCss">
                <InputText @bind-Value="Input.PhoneNumber" class="@ThemeConfiguration.GenericControls.DefaultCss" placeholder="@localizer[EnterPhoneNumberTextKey]" />
                <label for="phone-number" class="@ThemeConfiguration.Labels.DefaultCss">@localizer[PhoneNumberTextKey]</label>
                <ValidationMessage For="() => Input.PhoneNumber" class="text-danger" />
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">@localizer[SaveTextKey]</button>
        </EditForm>
    </div>
</div>

@code {
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await UserManager.GetUserNameAsync(user);
        phoneNumber = await UserManager.GetPhoneNumberAsync(user);

        Input.PhoneNumber ??= phoneNumber;
    }

    private async Task OnValidSubmitAsync()
    {
        if (Input.PhoneNumber != phoneNumber)
        {
            var setPhoneResult = await UserManager.SetPhoneNumberAsync(user, Input.PhoneNumber);
            if (!setPhoneResult.Succeeded)
            {
                RedirectManager.RedirectToCurrentPageWithStatus($"{localizer[FailedToSetPhoneNumberTextKey]}.", HttpContext);
            }
        }

        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToCurrentPageWithStatus($"{localizer[ProfileUpdatedTextKey]}", HttpContext);
    }

    private sealed class InputModel
    {
        [Phone]
        [Display(Name = "Phone number")]
        public string? PhoneNumber { get; set; }
    }

    #region Resource Keys
    [ResourceKey(defaultValue:"Profile")]
    public const string ProfileTitleTextKey = "ProfileTitleText";
    [ResourceKey(defaultValue: "Please choose your username")]
    public const string ChooseUsernameTextKey = "ChooseUsernameText";
    [ResourceKey(defaultValue: "Username")]
    public const string UsernameTextKey = "UsernameText";
    [ResourceKey(defaultValue: "Please enter your phone number")]
    public const string EnterPhoneNumberTextKey = "EnterPhoneNumberText";
    [ResourceKey(defaultValue: "Phone number")]
    public const string PhoneNumberTextKey = "PhoneNumberText";
    [ResourceKey(defaultValue: "Save")]
    public const string SaveTextKey = "SaveText";
    [ResourceKey(defaultValue: "Error: Failed to set phone number")]
    public const string FailedToSetPhoneNumberTextKey = "FailedToSetPhoneNumberText";
    [ResourceKey(defaultValue: "Your profile has been updated")]
    public const string ProfileUpdatedTextKey = "ProfileUpdatedText";
    #endregion Resource Keys
}
