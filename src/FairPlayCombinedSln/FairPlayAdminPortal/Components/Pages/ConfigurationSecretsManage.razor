@page "/ConfigurationSecretsManage"

@using FairPlayCombined.Common
@using FairPlayCombined.Models.Common.ConfigurationSecret
@using FairPlayCombined.Services.Common

@inject IToastService toastService
@inject ConfigurationSecretService configurationSecretService

@rendermode RenderMode.InteractiveServer
@attribute [StreamRendering(enabled: true)]

<h3>ConfigurationSecretsManage</h3>

<FluentEditForm FormName="frmOpenAIConfiguration" Model="this.allConfigurationSecrets" OnValidSubmit="OnValidSubmitAsync">
    <div>
        <ObjectGraphDataAnnotationsValidator></ObjectGraphDataAnnotationsValidator>
        <FluentValidationSummary></FluentValidationSummary>
    </div>
    @if (this.openAIConfiguration != null)
    {
        <div>
            <FluentLabel Typo="Typography.H3">
                <FluentAnchor Href="https://platform.openai.com/account/api-keys" Target="_blank">
                    <FluentIcon Value="@(new Icons.Regular.Size16.Globe())"
                                Color="Color.Accent" Slot="start"></FluentIcon>
                    Open AI Configuration
                </FluentAnchor>
            </FluentLabel>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">
                @openAIConfiguration.Name
            </FluentLabel>
            <FluentTextField style="width:100%;" @bind-Value="this.openAIConfiguration.Value"></FluentTextField>
            <FluentValidationMessage For="@( () => openAIConfiguration.Value)"></FluentValidationMessage>
        </div>
    }
    @if (this.generateDall3ImageConfiguration != null)
    {
        <div>
            <FluentLabel Typo="Typography.H3">
                <FluentAnchor Href="https://platform.openai.com/docs/api-reference/images" Target="_blank">
                    <FluentIcon Value="@(new Icons.Regular.Size16.Globe())"
                                Color="Color.Accent" Slot="start"></FluentIcon>
                    DALL 3 Image Configuration
                </FluentAnchor>
            </FluentLabel>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body">@generateDall3ImageConfiguration.Name</FluentLabel>
            <FluentTextField style="width:100%;" TextFieldType="TextFieldType.Url" InputMode="InputMode.Url" @bind-Value="this.generateDall3ImageConfiguration.Value"></FluentTextField>
            <FluentValidationMessage For="@( () => generateDall3ImageConfiguration.Value)"></FluentValidationMessage>
        </div>
    }
    @if (this.openAIChatCompletionConfiguration != null)
    {
        <div>
            <FluentLabel Typo="Typography.H3">
                <FluentAnchor Href="https://platform.openai.com/docs/api-reference/chat" Target="_blank">
                    <FluentIcon Value="@(new Icons.Regular.Size16.Globe())"
                                Color="Color.Accent" Slot="start"></FluentIcon>
                    OpenAI Chat Completion Configuration
                </FluentAnchor>
            </FluentLabel>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body">@openAIChatCompletionConfiguration.Name</FluentLabel>
            <FluentTextField style="width:100%;" TextFieldType="TextFieldType.Url" InputMode="InputMode.Url" @bind-Value="this.openAIChatCompletionConfiguration.Value"></FluentTextField>
            <FluentValidationMessage For="@( () => openAIChatCompletionConfiguration.Value)"></FluentValidationMessage>
        </div>
    }
    @if (this.openAITextGenerationModelConfiguration != null)
    {
        <div>
            <FluentLabel Typo="Typography.H3">
                <FluentAnchor Href="https://platform.openai.com/docs/api-reference/chat" Target="_blank">
                    <FluentIcon Value="@(new Icons.Regular.Size16.Globe())"
                                Color="Color.Accent" Slot="start"></FluentIcon>
                    OpenAI Text Generation Model Configuration
                </FluentAnchor>
            </FluentLabel>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body">@openAITextGenerationModelConfiguration.Name</FluentLabel>
            <FluentTextField style="width:100%;" TextFieldType="TextFieldType.Text" InputMode="InputMode.Text" @bind-Value="this.openAITextGenerationModelConfiguration.Value"></FluentTextField>
            <FluentValidationMessage For="@( () => openAITextGenerationModelConfiguration.Value)"></FluentValidationMessage>
        </div>
    }
    @if (this.azureOpenAIEndpointConfiguration != null && this.azureOpenAIKeyConfiguration != null &&
    this.azureOpenAIDeploymentNameConfiguration != null)
    {
        <div>
            <FluentLabel Typo="Typography.H3">
                <FluentAnchor Href="https://learn.microsoft.com/en-us/azure/ai-services/openai/" Target="_blank">
                    <FluentIcon Value="@(new Icons.Regular.Size16.Globe())"
                                Color="Color.Accent" Slot="start"></FluentIcon>
                    Azure OpenAI Configuration
                </FluentAnchor>
            </FluentLabel>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body">@azureOpenAIEndpointConfiguration.Name</FluentLabel>
            <FluentTextField style="width:100%;" @bind-Value="this.azureOpenAIEndpointConfiguration.Value"></FluentTextField>
            <FluentValidationMessage For="@( () => azureOpenAIEndpointConfiguration.Value)"></FluentValidationMessage>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body">@azureOpenAIKeyConfiguration.Name</FluentLabel>
            <FluentTextField style="width:100%;" @bind-Value="this.azureOpenAIKeyConfiguration.Value"></FluentTextField>
            <FluentValidationMessage For="@( () => azureOpenAIKeyConfiguration.Value)"></FluentValidationMessage>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body">@azureOpenAIDeploymentNameConfiguration.Name</FluentLabel>
            <FluentTextField style="width:100%;" @bind-Value="this.azureOpenAIDeploymentNameConfiguration.Value"></FluentTextField>
            <FluentValidationMessage For="@( () => azureOpenAIDeploymentNameConfiguration.Value)"></FluentValidationMessage>
        </div>
    }
    @if (this.azureVideoIndexerAccountIdConfiguration != null &&
    this.azureVideoIndexerLocationConfiguration != null &&
    this.azureVideoIndexerResourceGroupConfiguration != null &&
    this.azureVideoIndexerResourceNameConfiguration != null &&
    this.azureVideoIndexerSubscriptionIdConfiguration != null)
    {
        <div>
            <FluentLabel Typo="Typography.H3">
                <FluentAnchor Href="https://learn.microsoft.com/en-us/azure/azure-video-indexer/" Target="_blank">
                    <FluentIcon Value="@(new Icons.Regular.Size16.Globe())"
                                Color="Color.Accent" Slot="start"></FluentIcon>
                    Azure Video Indexer Configuration
                </FluentAnchor>
            </FluentLabel>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body">@azureVideoIndexerAccountIdConfiguration.Name</FluentLabel>
            <FluentTextField style="width:100%;" @bind-Value="this.azureVideoIndexerAccountIdConfiguration.Value"></FluentTextField>
            <FluentValidationMessage For="@( () => azureVideoIndexerAccountIdConfiguration.Value)"></FluentValidationMessage>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body">@azureVideoIndexerLocationConfiguration.Name</FluentLabel>
            <FluentTextField style="width:100%;" @bind-Value="this.azureVideoIndexerLocationConfiguration.Value"></FluentTextField>
            <FluentValidationMessage For="@( () => azureVideoIndexerLocationConfiguration.Value)"></FluentValidationMessage>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body">@azureVideoIndexerResourceGroupConfiguration.Name</FluentLabel>
            <FluentTextField style="width:100%;" @bind-Value="this.azureVideoIndexerResourceGroupConfiguration.Value"></FluentTextField>
            <ValidationMessage For="@( () => azureVideoIndexerResourceGroupConfiguration.Value)"></ValidationMessage>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body">@azureVideoIndexerResourceNameConfiguration.Name</FluentLabel>
            <FluentTextField style="width:100%;" @bind-Value="this.azureVideoIndexerResourceNameConfiguration.Value"></FluentTextField>
            <FluentValidationMessage For="@( () => azureVideoIndexerResourceNameConfiguration.Value)"></FluentValidationMessage>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body">@azureVideoIndexerSubscriptionIdConfiguration.Name</FluentLabel>
            <FluentTextField style="width:100%;" @bind-Value="this.azureVideoIndexerSubscriptionIdConfiguration.Value"></FluentTextField>
            <FluentValidationMessage For="@( () => azureVideoIndexerSubscriptionIdConfiguration.Value)"></FluentValidationMessage>
        </div>
    }
    @if (this.googleGeminiKeyConfiguration != null)
    {
        <div>
            <h3>Google Gemini Configuration</h3>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body">@googleGeminiKeyConfiguration.Name</FluentLabel>
            <FluentTextField style="width:100%;" @bind-Value="this.googleGeminiKeyConfiguration.Value"></FluentTextField>
            <FluentValidationMessage For="@( () => googleGeminiKeyConfiguration.Value)"></FluentValidationMessage>
        </div>
    }
    @if (this.azureContentSafetyKeyConfiguration != null 
    && this.azureContentSafetyEndpointConfiguration != null)
    {
        <div>
            <FluentLabel Typo="Typography.H3">
                <FluentAnchor Href="https://learn.microsoft.com/en-us/azure/ai-services/content-safety/" Target="_blank">
                    <FluentIcon Value="@(new Icons.Regular.Size16.Globe())"
                                Color="Color.Accent" Slot="start"></FluentIcon>
                    Azure Content Safety Configuration
                </FluentAnchor>
            </FluentLabel>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body">@azureContentSafetyEndpointConfiguration.Name</FluentLabel>
            <FluentTextField style="width:100%;" TextFieldType="TextFieldType.Url" InputMode="InputMode.Url" @bind-Value="this.azureContentSafetyEndpointConfiguration.Value"></FluentTextField>
            <FluentValidationMessage For="@( () => azureContentSafetyEndpointConfiguration.Value)"></FluentValidationMessage>
        </div>
        <div>
            <FluentLabel Typo="Typography.Body">@azureContentSafetyKeyConfiguration.Name</FluentLabel>
            <FluentTextField style="width:100%;" TextFieldType="TextFieldType.Text" InputMode="InputMode.Text" @bind-Value="this.azureContentSafetyKeyConfiguration.Value"></FluentTextField>
            <FluentValidationMessage For="@( () => azureContentSafetyKeyConfiguration.Value)"></FluentValidationMessage>
        </div>
    }
    <div>
        <FluentButton Type="ButtonType.Submit"
                      IconStart="@(new Icons.Regular.Size16.ArrowClockwise())"
                      Appearance="Appearance.Accent"
                      Loading="@this.IsBusy">
            Save
        </FluentButton>
    </div>
</FluentEditForm>

@if (this.externalServicesHealthModels?.Length > 0)
{
    <FluentDataGrid Items="this.externalServicesHealthModels.AsQueryable()">
        <PropertyColumn Property="@(p=>p.ServiceName)"></PropertyColumn>
        <PropertyColumn Property="@(p=>p.IsHealthy)"></PropertyColumn>
        <PropertyColumn Property="@(p=>p.Response)" Class="multiline-text"></PropertyColumn>
    </FluentDataGrid>
}