@page "/RoleCreate"
@using FairPlayCombined.Models.Role
@using Microsoft.AspNetCore.Identity
@inject RoleManager<IdentityRole> roleManager
@inject NavigationManager navigationManager
@inject IToastService toastService
@rendermode RenderMode.InteractiveServer

<h3>RoleCreateAsync</h3>

<EditForm FormName="frmCreateRole" Model="this.createRoleModel" OnValidSubmit="OnValidSubmitAsync">
    <div class="mb-3">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
    </div>
    <div class="mb-3">
        <label class="form-label">Name</label>
        <InputText class="form-control" @bind-Value="createRoleModel.Name"></InputText>
    </div>
    <div class="mb-3">
        <button type="submit" class="btn btn-primary">Save</button>
    </div>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private CreateRoleModel createRoleModel { get; set; } = new();
    private CancellationTokenSource cancellationTokenSource = new();

    private async void OnValidSubmitAsync()
    {
        IdentityRole role = new()
            {
                Name = createRoleModel.Name,
                NormalizedName = createRoleModel.Name!.Normalize()
            };
        var result = await this.roleManager.CreateAsync(role);
        if (result.Succeeded)
        {
            this.toastService!.ShowSuccess($"Role '{role.Name}' been created");
            this.navigationManager.NavigateTo("RoleList");
        }
        else
        {
            var message = String.Join(",", result.Errors.Select(p => p.Description));
            this.toastService!.ShowError(message);
        }
    }
}
