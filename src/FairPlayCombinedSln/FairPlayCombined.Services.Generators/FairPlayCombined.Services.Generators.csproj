<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<!-- 👇 We don't want to reference the source generator dll directly in consuming projects -->
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<!-- 👇 New project, why not! -->
		<Nullable>enable</Nullable>
		<ImplicitUsings>true</ImplicitUsings>
		<LangVersion>Latest</LangVersion>
		<EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
		<Configurations>Debug;Release;Debug_Enable_Paid_Tests</Configurations>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
	  <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Enable_Paid_Tests|AnyCPU'">
	  <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
	  <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
	</PropertyGroup>

	<!-- The following libraries include the source generator interfaces and types we need -->
	<ItemGroup>
		<PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.11.0-beta1.24165.2" PrivateAssets="all" />
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.10.0-2.final" PrivateAssets="all" />
		<PackageReference Include="SonarAnalyzer.CSharp" Version="9.24.0.89429">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
	<ItemGroup>
		<None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
	</ItemGroup>

</Project>
